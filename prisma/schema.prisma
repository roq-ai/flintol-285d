generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model organization {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_member team_member[]
  video       video[]
}

model team_member {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?       @db.Uuid
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  video_draft     video_draft[]
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  team_member  team_member[]
  video        video[]
}

model video {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String        @db.VarChar(255)
  content         String        @db.VarChar
  status          String        @db.VarChar(255)
  organization_id String?       @db.Uuid
  creator_id      String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  user            user?         @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  video_draft     video_draft[]
}

model video_draft {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  video_id       String?      @db.Uuid
  team_member_id String?      @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  team_member    team_member? @relation(fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  video          video?       @relation(fields: [video_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
